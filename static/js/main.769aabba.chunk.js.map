{"version":3,"sources":["utils/environment/index.js","components/InfoPage/index.js","components/LoadingPage/index.js","components/NotSupportedPage/index.js","components/WelcomePage/index.js","components/App/theme.js","components/App/index.js","serviceWorker.js","index.js","hooks/useSimpleRouter/index.js"],"names":["__webpack_require__","d","__webpack_exports__","supports","platform","mode","userAgent","window","navigator","toLowerCase","cssGrid","document","documentElement","style","fileReader","promise","fullscreen","isIos","test","isStandalone","standalone","Container","styled","div","_templateObject","Box","_templateObject2","_ref","theme","paperBackground","InfoPage","_ref2","children","otherProps","Object","objectWithoutProperties","react_default","a","createElement","LoadingPage","esm_extends","components_InfoPage","NotSupportedPage","Li","li","WelcomePage_templateObject","A","attrs","rel","target","WelcomePage_templateObject2","Button","button","_templateObject3","Signature","p","_templateObject4","WelcomePage","href","onClick","push","localStorage","getItem","pageBackground","borderColor","GlobalStyle","createGlobalStyle","App_templateObject","props","routes","url","Component","React","lazy","Promise","all","e","then","bind","App","useSimpleRouter","route","styled_components_browser_esm","Fragment","Suspense","fallback","components_LoadingPage","components_NotSupportedPage","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","getUrl","hash","substr","arguments","length","undefined","_useState","useState","useMemo","_useState2","_home_supero_projetos_ethics_canvas_generator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setUrl","useEffect","handleHashChange","removeEventListener","find","routeUrl","isNil","isRegExp"],"mappings":"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","file":"static/js/main.769aabba.chunk.js","sourcesContent":["export const userAgent = window.navigator.userAgent.toLowerCase()\n\nexport const supports = {\n  cssGrid: 'grid' in document.documentElement.style,\n  fileReader: 'FileReader' in window,\n  promise: 'Promise' in window,\n  fullscreen: ('requestFullscreen' in document.documentElement)\n    || ('mozRequestFullScreen' in document.documentElement)\n    || ('webkitRequestFullscreen' in document.documentElement),\n}\nexport const platform = {\n  isIos: /iphone|ipad|ipod/.test(userAgent),\n}\nexport const mode = {\n  isStandalone: ('standalone' in window.navigator) && (window.navigator.standalone),\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\n\nconst Container = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  min-height: 100%;\n  width: 100%;\n`\nconst Box = styled.div`\n  background-color: ${({ theme }) => theme.paperBackground};\n  margin: 1em 1em 3em 1em;\n  max-width: calc(100% - 2em);\n  padding: 3vw;\n  width: 50em;\n`\n\nfunction InfoPage({\n  children,\n  ...otherProps\n}) {\n  return (\n    <Container\n      {...otherProps}\n    >\n      <Box>\n        {children}\n      </Box>\n\n    </Container>\n  )\n}\n\nInfoPage.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default InfoPage\n","\n/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\n\nimport InfoPage from 'components/InfoPage'\n\n\nfunction LoadingPage({\n  ...otherProps\n}) {\n  return (\n    <InfoPage\n      {...otherProps}\n    >\n      <p>Loading ...</p>\n    </InfoPage>\n  )\n}\n\n\nexport default LoadingPage\n","\n/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\n\nimport InfoPage from 'components/InfoPage'\n\n\nfunction NotSupportedPage({\n  ...otherProps\n}) {\n  return (\n    <InfoPage\n      {...otherProps}\n    >\n      <h1>Sorry,</h1>\n      <p>your browser does not provide the features needed for this application. Please switch to a current version of a modern browser.</p>\n    </InfoPage>\n  )\n}\n\n\nexport default NotSupportedPage\n","\n/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { push } from 'hooks/useSimpleRouter'\n\nimport InfoPage from 'components/InfoPage'\n\n\nconst Li = styled.li`\n  margin-bottom: 0.5em;\n`\nconst A = styled.a.attrs({\n  rel: 'noopener noreferrer',\n  target: '_blank',\n})`\n  color: inherit;\n`\nconst Button = styled.button`\n  background: #37A51C;\n  border-radius: 0;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 16px;\n  font-weight: bold;\n  padding: 0.75em 2em;\n  text-transform: uppercase;\n`\nconst Signature = styled.p`\n  font-family: 'Montserrat', sans-serif;\n  font-size: 1.2em;\n  margin-bottom: 2em;\n`\n\n\nfunction WelcomePage({\n  ...otherProps\n}) {\n  return (\n    <InfoPage\n      {...otherProps}\n    >\n      <h3>Canvas Ético</h3>\n      <h1>Bem vindo!</h1>\n      <p>Na próxima página, você terá a possibilidade de preencher seu canvas ético. Nenhum dado seu será armazenado ou mesmo enviado a um servidor. Isso é ótimo, pois ninguém pode usar indevidamente seus dados, mas você precisa se preocupar em armazená-los e recarregá-los por conta própria.</p>\n      <ul>\n        <Li>\n          Seu canvas será armazenado no <strong>armazenamento local (local storage)</strong> do navegador. sso significa que ele persistirá se você recarregar a página ou até mesmo fechar o navegador e abri-lo novamente. No entanto, ele não estará disponível em outro navegador ou computador.\n        </Li>\n        <Li>\n          Você tem a possibilidade de <strong>baixar seu trabalho como um arquivo de texto simples e legível</strong> (utilizando sintaxe <A href=\"https://de.wikipedia.org/wiki/Markdown\">markdown</A>). Fique atento ao botão &#34;Save to file&#34; no canto superior direito.\n        </Li>\n        <Li>\n          Você pode editar o arquivo de texto localmente (se desejar) e <strong>carregá-lo novamente</strong>. Fique atento ao botão &#34;Import from file&#34; no canto superior direito.\n        </Li>\n        <Li>\n          Esta página está habilitada para uso <strong>offline</strong>. Isso significa que, se você carregá-la uma vez, ela persistirá caso perca sua conexão com a internet. Você pode até navegar novamente para a URL e ela será carregada sem conexão.\n        </Li>\n      </ul>\n      <p>Espero que este canvas seja útil para você! Agradeço seu feedback através do <A href=\"https://www.linkedin.com/in/candinhojr/\">linkedin</A>!</p>\n      <p>O canvas aqui utilizado é o resultado do meu Trabalho de Conclusão de Curso do curso de Sistemas de Informação da Universidade Federal de Santa Catatina (<A href=\"https://ufsc.br/\">UFSC</A>) ❤️.</p>\n      <p>O projeto web foi baseado no trabalho de <A href=\"https://www.linkedin.com/in/tobias-zucali-3555b388/\">Tobias Zucali</A>, que desenvolveu a ferramenta para o preenchimento do <A href=\"https://tobias-zucali.github.io/business-model-canvas-generator\">Business Model Canvas</A>.</p>\n      <Signature>Candinho Jr.</Signature>\n      <Button onClick={() => push('/canvas')}>{(localStorage.getItem('isInited')) ? 'Criar novo canvas' : 'Carregar canvas'}</Button>\n    </InfoPage>\n  )\n}\n\n\nexport default WelcomePage\n","export default {\n  pageBackground: '#EEEEEE',\n  paperBackground: '#FFFFFF',\n  borderColor: '#CCCCCC',\n}\n","import React from 'react'\nimport { createGlobalStyle, ThemeProvider } from 'styled-components'\nimport { supports } from 'utils/environment'\n\nimport useSimpleRouter from 'hooks/useSimpleRouter'\nimport LoadingPage from 'components/LoadingPage'\nimport NotSupportedPage from 'components/NotSupportedPage'\nimport WelcomePage from 'components/WelcomePage'\n\nimport theme from './theme'\n\n\nconst GlobalStyle = createGlobalStyle`\n  BODY {\n    background-color: ${(props) => props.theme.pageBackground};\n    font-size: 14px;\n\n    @media (min-width: 1600px) {\n      font-size: 16px;\n    }\n    @media (min-width: 2000px) {\n      font-size: 18px;\n    }\n  }\n`\n\nconst routes = [\n  {\n    url: '/canvas',\n    Component: React.lazy(() => import('components/EthicsCanvas')),\n  },\n  {\n    Component: WelcomePage,\n  },\n]\n\nfunction App() {\n  const {\n    Component,\n  } = useSimpleRouter(routes).route\n\n  return (\n    <ThemeProvider\n      theme={theme}\n    >\n      <React.Fragment>\n        <GlobalStyle />\n        {(supports.cssGrid && supports.fileReader && supports.promise) ? (\n          <React.Suspense\n            fallback={<LoadingPage />}\n          >\n            <Component />\n          </React.Suspense>\n        ) : (\n          <NotSupportedPage />\n        )}\n      </React.Fragment>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","/* eslint-disable no-console */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => { // eslint-disable-line no-param-reassign\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport './index.css'\nimport 'normalize.css/normalize.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n","import { useEffect, useMemo, useState } from 'react'\nimport isRegExp from 'lodash/isRegExp'\nimport isNil from 'lodash/isNil'\n\n\nexport const getUrl = () => {\n  const { hash } = window.location\n  return hash.substr(1)\n}\nexport const push = (url = '') => {\n  window.location = `#${url}`\n}\n\nexport default function useSimpleRouter(routes) {\n  const [url, setUrl] = useState(\n    useMemo(getUrl, [])\n  )\n  useEffect(() => {\n    const handleHashChange = () => {\n      setUrl(getUrl())\n    }\n    window.addEventListener('hashchange', handleHashChange)\n\n    return function cleanup() {\n      window.removeEventListener('hashchange', handleHashChange)\n    }\n  })\n\n  const result = useMemo(() => {\n    let match\n    const route = routes.find(({ url: routeUrl }) => {\n      if (isNil(routeUrl)) {\n        return true\n      } else {\n        if (isRegExp(routeUrl)) {\n          match = url.match(routeUrl)\n          return Boolean(match)\n        }\n        return routeUrl === url\n      }\n    })\n\n    return {\n      match,\n      push,\n      route: route || { url },\n    }\n  }, [routes, url])\n\n  return result\n}\n"],"sourceRoot":""}